<job>
<script language="VBScript">
function prompt(message, title, value)
    prompt = InputBox(message, title, value)
end function
</script>


<script language="JavaScript">
var htmlfile = WScript.CreateObject('htmlfile');
htmlfile.write('<meta http-equiv="x-ua-compatible" content="IE=11">');


function 将棋ウォーズ(){
    将棋ウォーズ.ID = 将棋ウォーズ.IDファイル開く();
    将棋ウォーズ.ID = 将棋ウォーズ.ID入力プロンプト(将棋ウォーズ.ID);

    ファイル保存("id.txt", 将棋ウォーズ.ID);
    フォルダ作成(将棋ウォーズ.ID);

    将棋ウォーズ.取得件数 = 0;

    var gtype = {'10分':'', '3分':'sb', '10秒':'s1'};

    for(var key in gtype){
        将棋ウォーズ.現在のモード = key;
        フォルダ作成(将棋ウォーズ.ID + '/' + key);
        将棋ウォーズ.ダウンロード済み棋譜 = ファイル一覧(将棋ウォーズ.ID + '/' + key);

        将棋ウォーズ.一覧ページ解析("https://shogiwars.heroz.jp/games/history?gtype=" + gtype[key] + "&user_id=" + 将棋ウォーズ.ID);
    }

    将棋ウォーズ.終了(将棋ウォーズ.取得件数 + "件の棋譜を取得しました")
}



将棋ウォーズ.IDファイル開く = function (){
    if(!ファイル存在('id.txt')){
        ファイル保存('id.txt', '');
    }
    return ファイル開く("id.txt");
};



将棋ウォーズ.ID入力プロンプト = function (id){
    id = prompt("IEで将棋ウォーズにログインしてから\n将棋ウォーズのIDを入力してください", "将棋ウォーズ棋譜ダウンローダ", id);
    if(!id){
        将棋ウォーズ.終了();
    }
    else if(id.match(/\W/)){
        将棋ウォーズ.終了("エラー：IDに不正な文字が含まれています");
    }
    return id;
};



将棋ウォーズ.一覧ページ解析 = function(url){
    var document = IE(url);
    var a        = document.querySelectorAll("a");

    for(var i = 0; i < a.length; i++){
        if(a[i].textContent === '\u898B\u308B'){ //見る
            var 棋譜ID = (a[i].onclick)  ?  String(a[i].onclick).match(/'(.+?)'/)[1]  :  a[i].href.match(/games\/([\w\-]+)/)[1]; // 自分 or 他人
            if(将棋ウォーズ.ダウンロード済み棋譜.indexOf(将棋ウォーズ.棋譜ID→ファイル名(棋譜ID)) === -1){
                将棋ウォーズ.棋譜ページ解析(棋譜ID);
                var 取得済 = true;
            }
        }
        else if(a[i].textContent === '\u6B21' && 取得済){ //次
            将棋ウォーズ.一覧ページ解析(a[i].href);
            return;
        }
    }
};



将棋ウォーズ.棋譜ページ解析 = function(棋譜ID){
    var html = HTTP_GET("https://kif-pona.heroz.jp/games/" + 棋譜ID);
    var json = html.match(/data-react-props="(.+?)"/)
    if(!json){
        return;
    }
    json = json[1].replace(/&quot;/g, '"')

    var data = htmlfile.parentWindow.JSON.parse(json).gameHash;

    if(!data.moves){
        data.moves = [];
    }
    if(data.init_sfen_position !== "lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL b - 1"){
        return;
    }
    var 先手段級 = data.sente_dan > 0 ? data.sente_dan + '段' : -data.sente_dan + '級';
    var 後手段級 = data.gote_dan  > 0 ? data.gote_dan  + '段' : -data.gote_dan  + '級';
    var 先手名   = data.sente + ' ' + 先手段級
    var 後手名   = data.gote  + ' ' + 後手段級

    将棋ウォーズ.KIF保存(棋譜ID, 先手名, 後手名, 将棋ウォーズ.KIF変換(data.moves, data.result));
    将棋ウォーズ.取得件数++;
};



将棋ウォーズ.KIF保存 = function(棋譜ID, 先手名, 後手名, kif指し手){
    var kif = "";
    kif += "開始日時：" + 棋譜ID.split('-')[2].replace(/(\d\d\d\d)(\d\d)(\d\d)_(\d\d)(\d\d)(\d\d)/, "$1/$2/$3 $4:$5:$6") + "\r\n";
    kif += "先手：" + 先手名 + "\r\n";
    kif += "後手：" + 後手名 + "\r\n";
    kif += "棋戦：将棋ウォーズ " + 将棋ウォーズ.現在のモード + "\r\n";
    kif += "場所：https://kif-pona.heroz.jp/games/" + 棋譜ID + "\r\n";
    kif +=  kif指し手;

    var パス = 将棋ウォーズ.ID + '/' + 将棋ウォーズ.現在のモード + '/' + 将棋ウォーズ.棋譜ID→ファイル名(棋譜ID);
    ファイル保存(パス, kif);
};



将棋ウォーズ.KIF変換 = function(csa, 終局文字列){  //[{t:599, n:0, m:"+7776FU"}, {t: 599, n: 1, m: "-8384FU"}]
    var result = "";
    var 手数   = 1;
    var 駒変換 = {FU:'歩', KY:'香' ,KE:'桂' ,GI:'銀' ,KI:'金', KA:'角', HI:'飛', OU:'玉', TO:'と', NY:'成香' ,NK:'成桂', NG:'成銀', UM:'馬', RY:'龍'};
    var 逆変換 = {TO:'歩', NY:'香' ,NK:'桂', NG:'銀', UM:'角', RY:'飛'};
    var 成り駒 = ['TO', 'NY', 'NK', 'NG', 'UM', 'RY'];
    var 全数字 = {1:'１', 2:'２', 3:'３', 4:'４', 5:'５', 6:'６', 7:'７', 8:'８', 9:'９'};
    var 漢数字 = {1:'一', 2:'二', 3:'三', 4:'四', 5:'五', 6:'六', 7:'七', 8:'八', 9:'九'};
    var 時間表 = {'10分':600, '3分':180, '10秒':3600};

    var 先手残り時間 = 時間表[将棋ウォーズ.現在のモード];
    var 後手残り時間 = 時間表[将棋ウォーズ.現在のモード];
    var 先手累積時間 = 0;
    var 後手累積時間 = 0;

    for(var i = 0; i < csa.length; i++){
        var 指し手 = csa[i].m;
        var 時間   = csa[i].t;
        var kif    = "";

        var 手番 = 指し手.substr(0, 1);
        var 前X  = 指し手.substr(1, 1);
        var 前Y  = 指し手.substr(2, 1);
        var 後X  = 指し手.substr(3, 1);
        var 後Y  = 指し手.substr(4, 1);
        var 駒   = 指し手.substr(5, 2);
        
        kif += 全数字[後X]; //"同　歩"みたいな表現に対応していない
        kif += 漢数字[後Y];

        if(成り駒.indexOf(駒) > -1 && 将棋ウォーズ.KIF変換.成り判定(csa, i, 手番, 駒, 前X, 前Y)){
            kif += 逆変換[駒] + "成";
        }
        else{
            kif += 駒変換[駒];
        }
        kif += (前X == 0) ? '打' : ('(' + 前X + 前Y + ')');

        //時間
        if(手番 === "+"){
            var 消費時間  = 先手残り時間 - 時間;
            先手累積時間 += 消費時間;
            先手残り時間  = 時間;
            kif          += "  " + 将棋ウォーズ.KIF変換.時間(消費時間, 先手累積時間);
        }
        else{
            var 消費時間  = 後手残り時間 - 時間;
            後手累積時間 += 消費時間;
            後手残り時間  = 時間;
            kif          += "  " + 将棋ウォーズ.KIF変換.時間(消費時間, 後手累積時間);
        }
        result += 手数 + " " + kif + "\r\n";
        手数++
    }

    result += 将棋ウォーズ.KIF変換.終局(終局文字列, 手数)

    return result;
};



将棋ウォーズ.KIF変換.成り判定 = function (csa, 手数, 手番, 成り駒, 前X, 前Y){
    var 判定 = new RegExp('^\\' + 手番 + '\\d\\d' + 前X + 前Y);

    for(var i = 手数 - 2; i >= 0; i -= 2){
        if(csa[i].m.match(判定)){
            return csa[i].m.indexOf(成り駒) === -1; //前回の位置が成り駒だとfalse
        }
    }
    return true;
};



将棋ウォーズ.KIF変換.時間 = function (消費時間, 累積時間){
    var 消費分 = Math.floor(消費時間 / 60);
    var 消費秒 = 消費時間 % 60;
    var 累積時 = Math.floor(累積時間 / 3600);
    var 累積分 = Math.floor(累積時間 % 3600 / 60);
    var 累積秒 = 累積時間 % 60;

    消費秒 = ('0' + 消費秒).slice(-2);
    累積時 = ('0' + 累積時).slice(-2);
    累積分 = ('0' + 累積分).slice(-2);
    累積秒 = ('0' + 累積秒).slice(-2);

    return "( " + 消費分 + ":" + 消費秒 + "/" + 累積時 + ":" + 累積分 + ":" + 累積秒 + ")";
};



将棋ウォーズ.KIF変換.終局 = function (終局文字列, 手数){
    var 終局  = {CHECKMATE:'詰み', TORYO:'投了', DISCONNECT:'反則負け', TIMEOUT:'切れ負け', OUTE_SENNICHI:'反則負け', ENTERINGKING:'入玉勝ち', SENNICHI:'千日手'};
    var match = 終局文字列.match(/(_WIN|DRAW)_(\w+)/);
    return (match && match[2] in 終局) ? 手数 + " " + 終局[match[2]] + "\r\n" : ''
}



将棋ウォーズ.棋譜ID→ファイル名 = function (棋譜ID){
    var id = 棋譜ID.split('-');
    return id[2] + "-" + id[0] + "-" + id[1] + ".kif";
};



将棋ウォーズ.終了 = function(str){
    if(str){
        WScript.Echo(str);
    }
    if(IE.browser){
        IE.browser.Quit();
    }
    WScript.Quit();
};



function IE(url){
    if(!IE.browser){
        IE.browser = WScript.CreateObject("InternetExplorer.Application");
    }
    IE.browser.navigate(url);
    for(var i = 0; i < 300; i++){
        if(!IE.browser.Busy && IE.browser.readyState === 4){
            break;
        }
        WScript.Sleep(100);
    }
    return IE.browser.document;
}



function ファイル開く(file, encode){
    var stream = WScript.CreateObject('ADODB.Stream');
    stream.charset = encode || "Shift_JIS";
    stream.Open();
    stream.loadFromFile(file);
    var contents = stream.ReadText();
    stream.close();

    return contents;
}



function ファイル保存(file, contents, encode){
    var stream = WScript.CreateObject('ADODB.Stream');
    stream.charset = encode || "Shift_JIS";
    stream.Open();
    stream.WriteText(contents);
    stream.SaveToFile(file, 2);
    stream.Close();
}



function ファイル存在(file){
    var fs = WScript.CreateObject('Scripting.FileSystemObject');
    return fs.FileExists(file);
}



function ファイル一覧(dir, mode){
    var result = [];
    var fs     = WScript.CreateObject("Scripting.FileSystemObject");

    for (var e = new Enumerator(fs.GetFolder(dir).Files); !e.atEnd(); e.moveNext()){
        if(mode === 'base'){
            result.push(fs.GetBaseName(e.item()));
        }
        else if(mode === 'full'){
            result.push(e.item());
        }
        else{
            result.push(fs.GetFileName(e.item()));
        }
    }
    return result;
}



function フォルダ作成(dir){
    var fs = WScript.CreateObject("Scripting.FileSystemObject");

    if(!fs.FolderExists(dir)){
        fs.CreateFolder(dir);
    }
}



function HTTP_GET(url){
    var http = WScript.CreateObject('Msxml2.ServerXMLHTTP'); // https://qiita.com/tnakagawa/items/3bce99d49b1aa3fc9a72
    http.open('GET', url, false);
    http.send();
    return http.responseText;
}



function 多重起動防止(){
    var process = GetObject("WinMgmts:").ExecQuery("Select * From Win32_Process");
    var count   = 0;

    for(var e = new Enumerator(process); !e.atEnd(); e.moveNext()){
        if(e.item().ExecutablePath === WScript.FullName && String(e.item().CommandLine).indexOf(WScript.ScriptFullName) > -1){
            count++;
        }
    }

    if(count > 1){
        WScript.Echo(WScript.ScriptName + " は既に起動しています");
        WScript.Quit();
    }
}



Array.prototype.indexOf = function(obj, start){
    for(var i = (start || 0), j = this.length; i < j; i++){
        if(this[i] === obj){
            return i;
        }
    }
    return -1;
};



try{
    多重起動防止();
    将棋ウォーズ();
}
catch(e){
    将棋ウォーズ.終了('エラーが発生しました')
}


// ウォーズ仕様の参考ページ https://github.com/tosh1ki/shogiwars
// CSA形式の参考ページ http://www2.computer-shogi.org/protocol/record_v22.html
// KIF形式の参考ページ http://kakinoki.o.oo7.jp/kif_format.html
</script>
</job>